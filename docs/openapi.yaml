openapi: 3.1.0
info:
  title: Bankcard OpenAPI definition
  version: v0.5
security:
  - Bearer Authentication: []
paths:
  /users/new:
    post:
      tags:
        - admin-users-controller
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AuthRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/UserResponse"
  /usercards/block:
    post:
      tags:
        - user-card-controller
      operationId: blockCardRequest
      requestBody:
        content:
          application/json:
            schema:
              type: integer
              format: int64
        required: true
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/BlockRequestResponse"
  /transaction/new:
    post:
      tags:
        - transaction-controller
      operationId: newTransaction
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TransactionRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/TransactionResponse"
  /cards/new:
    post:
      tags:
        - admin-cards-controller
      operationId: createCard
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CardRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/CardResponse"
  /cards/block:
    post:
      tags:
        - admin-cards-controller
      operationId: blockCard
      requestBody:
        content:
          application/json:
            schema:
              type: integer
              format: int64
        required: true
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/CardResponse"
  /cards/activate:
    post:
      tags:
        - admin-cards-controller
      operationId: activateCard
      requestBody:
        content:
          application/json:
            schema:
              type: integer
              format: int64
        required: true
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/CardResponse"
  /auth/signup:
    post:
      tags:
        - auth-controller
      operationId: signUp
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AuthRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/TokenResponse"
  /auth/signin:
    post:
      tags:
        - auth-controller
      operationId: signIn
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AuthRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/TokenResponse"
  /auth/refresh:
    post:
      tags:
        - auth-controller
      operationId: refresh
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/TokenResponse"
  /users/get:
    get:
      tags:
        - admin-users-controller
      operationId: getAllUsers
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: pageSize
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 5
        - name: sort
          in: query
          required: false
          schema:
            type: array
            default:
              - id
              - asc
            items:
              type: string
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UserResponse"
  /usercards/cards:
    get:
      tags:
        - user-card-controller
      operationId: myCards
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: pageSize
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 5
        - name: sort
          in: query
          required: false
          schema:
            type: array
            default:
              - id
              - asc
            items:
              type: string
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CardResponse"
  /usercards/balance:
    get:
      tags:
        - user-card-controller
      operationId: cardBalance
      parameters:
        - name: cardId
          in: query
          required: false
          schema:
            type: integer
            format: int64
            default: 0
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: number
  /transaction/history:
    get:
      tags:
        - transaction-controller
      operationId: transactionHistory
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: pageSize
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 5
        - name: sort
          in: query
          required: false
          schema:
            type: array
            default:
              - id
              - asc
            items:
              type: string
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TransactionResponse"
  /test:
    get:
      tags:
        - test-rest-controller
      operationId: helloTest
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: string
  /cards/get:
    get:
      tags:
        - admin-cards-controller
      operationId: getCards
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: pageSize
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 5
        - name: sort
          in: query
          required: false
          schema:
            type: array
            default:
              - id
              - asc
            items:
              type: string
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CardResponse"
  /cards/blocks:
    get:
      tags:
        - admin-cards-controller
      operationId: getBlockRequests
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: pageSize
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 5
        - name: sort
          in: query
          required: false
          schema:
            type: array
            default:
              - id
              - asc
            items:
              type: string
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/BlockRequestResponse"
  /users/delete:
    delete:
      tags:
        - admin-users-controller
      operationId: deleteUser
      requestBody:
        content:
          application/json:
            schema:
              type: integer
              format: int64
        required: true
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: object
  /cards/delete:
    delete:
      tags:
        - admin-cards-controller
      operationId: deleteCard
      requestBody:
        content:
          application/json:
            schema:
              type: integer
              format: int64
        required: true
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: object
components:
  schemas:
    AuthRequest:
      type: object
      properties:
        username:
          type: string
          minLength: 1
        password:
          type: string
          maxLength: 2147483647
          minLength: 8
      required:
        - password
        - username
    UserResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        role:
          type: string
          enum:
            - ROLE_ADMIN
            - ROLE_USER
    BlockRequestResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        cardId:
          type: integer
          format: int64
        maskedNumber:
          type: string
        status:
          type: string
          enum:
            - APPROVED
            - PENDING
    TransactionRequest:
      type: object
      properties:
        fromCardId:
          type: integer
          format: int64
        toCardId:
          type: integer
          format: int64
        amount:
          type: number
    CardResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        maskedNumber:
          type: string
        expiryDate:
          type: string
          format: date
        status:
          type: string
          enum:
            - ACTIVE
            - BLOCKED
            - EXPIRED
        balance:
          type: number
    TransactionResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        from:
          $ref: "#/components/schemas/CardResponse"
        to:
          $ref: "#/components/schemas/CardResponse"
        amount:
          type: number
        timestamp:
          type: string
          format: date-time
        status:
          type: string
          enum:
            - SUCCESS
            - FAILED
            - PENDING
    CardRequest:
      type: object
      properties:
        number:
          type: string
          minLength: 1
          pattern: ^\d{16}$
        expiryDate:
          type: string
          format: date
        status:
          type: string
          enum:
            - ACTIVE
            - BLOCKED
            - EXPIRED
        balance:
          type: number
          minimum: 0
        userId:
          type: integer
          format: int64
      required:
        - balance
        - expiryDate
        - number
        - status
        - userId
    TokenResponse:
      type: object
      properties:
        accessToken:
          type: string
        refreshToken:
          type: string
  securitySchemes:
    Bearer Authentication:
      type: http
      scheme: Bearer
      bearerFormat: JWT
